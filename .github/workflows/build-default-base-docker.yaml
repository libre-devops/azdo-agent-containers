name: 'Run Docker - Default'

# Allow run manually
on:
  schedule:
    - cron: '0 0 1 * *'  # This will run at 00:00 on the 1st of every month
  workflow_dispatch:
    inputs:
      working_directory:
        type: string
        description: What working directory should be passed to the script
        default: "containers/default"
      docker_image_name:
        type: string
        description: 'Docker Image name?'
        default: "azdo-agent-containers/default"
      enable_debug_mode:
        type: boolean
        description: 'Whether debug mode should be enable for within the script'
        default: true
      registry_url:
        type: string
        description: 'The URL of the container registry'
        default: ghcr.io
      docker_file_name:
        type: string
        description: 'Docker file name?'
        default: "Dockerfile"
      push_docker_image:
        type: boolean
        description: 'Push docker image?'
        default: true

jobs:
  run-script:
    name: 'Run Script'
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: pwsh

    steps:
      - uses: actions/checkout@v3

      - name: Free disk space
        run: |
          sudo apt-get remove --purge -y aria2 ansible shellcheck rpm xorriso zsync php*
          sudo apt-get autoremove -y >/dev/null 2>&1
          sudo apt-get autoclean -y >/dev/null 2>&1
          sudo rm -rf /usr/local/lib/android >/dev/null 2>&1
          docker rmi $(docker image ls -aq) >/dev/null 2>&1

      - name: Build
        id: run-script
        shell: pwsh
        run: |
          $workingDirectory = Join-Path -Path "${{ github.workspace }}" -ChildPath "${{ inputs.working_directory }}"
          .\Run-Docker.ps1 `
            -WorkingDirectory $workingDirectory `
            -PushDockerImage ${{ inputs.push_docker_image }} `
            -DebugMode ${{ inputs.enable_debug_mode }} `
            -DockerImageName ${{ inputs.docker_image_name }} `
            -DockerFileName ${{ inputs.docker_file_name }} `
            -RegistryUsername ${{ secrets.RegistryUsername }} `
            -RegistryPassword ${{ secrets.RegistryPassword }} `
            -ImageOrg ${{ github.repository_owner }}
