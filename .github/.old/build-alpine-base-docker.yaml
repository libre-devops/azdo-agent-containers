#name: Run Docker – Alpine
#################################################################################
## TRIGGERS
#################################################################################
#on:
#  # 1) build automatically when any Dockerfile is pushed to main
#  push:
#    branches: [ main ]
#    paths:    [ '**/*Dockerfile', '**/*start.sh', '**/*start.ps1' ]
#
#  # 2) build automatically at 00:00 UTC on the 1-st of every month
#  schedule:
#    - cron: '0 0 1 * *'
#
#  # 3) manual run
#  workflow_dispatch:
#    inputs:
#      working_directory:
#        description: 'Working directory passed to the script'
#        type: string
#        default: 'containers/alpine'
#
#      build_context:
#        description: 'Docker build context'
#        type: string
#        default: 'github_workspace'
#
#      docker_image_name:
#        description: 'Docker image name (repo/name)'
#        type: string
#        default: 'azdo-agent-containers/alpine'
#
#      enable_debug_mode:
#        description: 'Enable -DebugMode in the script'
#        type: boolean
#        default: false
#
#      registry_url:
#        description: 'Container registry URL'
#        type: string
#        default: 'ghcr.io'
#
#      docker_file_name:
#        description: 'Dockerfile name'
#        type: string
#        default: 'Dockerfile'
#
#      push_docker_image:
#        description: 'Push image after build?'
#        type: string            # Run-Docker.ps1 expects literal “true/false”
#        default: 'true'
#
#################################################################################
## JOBS
#################################################################################
#jobs:
#  run-script:
#    name: Run Build Script
#    runs-on: ubuntu-latest
#
#    defaults:
#      run:
#        shell: pwsh
#
#    env:
#      WD_INPUT:      ${{ github.event.inputs.working_directory  || 'containers/alpine' }}
#      CTX_INPUT:     ${{ github.event.inputs.build_context      || 'github_workspace'   }}
#      IMG_INPUT:     ${{ github.event.inputs.docker_image_name  || 'azdo-agent-containers/alpine' }}
#      DEBUG_INPUT:   ${{ github.event.inputs.enable_debug_mode  || 'false'  }}
#      PUSH_INPUT:    ${{ github.event.inputs.push_docker_image  || 'true'   }}
#      DFNAME_INPUT:  ${{ github.event.inputs.docker_file_name   || 'Dockerfile' }}
#      REGURL_INPUT:  ${{ github.event.inputs.registry_url       || 'ghcr.io' }}
#
#    steps:
#      - uses: actions/checkout@v3
#
#      - name: Build & (optionally) push image
#        run: |
#
#          $repoRoot = '${{ github.workspace }}'
#          $workingDir  = if ($Env:WD_INPUT  -eq 'github_workspace') { $repoRoot } else { Join-Path $repoRoot $Env:WD_INPUT  }
#          $contextPath = if ($Env:CTX_INPUT -eq 'github_workspace') { $repoRoot } else { Join-Path $repoRoot $Env:CTX_INPUT }
#
#          ./Run-Docker.ps1 `
#            -WorkingDirectory $workingDir `
#            -BuildContext     $contextPath `
#            -PushDockerImage  $Env:PUSH_INPUT `
#            -DebugMode        $Env:DEBUG_INPUT `
#            -DockerImageName  $Env:IMG_INPUT `
#            -DockerFileName   $Env:DFNAME_INPUT `
#            -RegistryUrl      $Env:REGURL_INPUT `
#            -RegistryUsername '${{ secrets.RegistryUsername }}' `
#            -RegistryPassword '${{ secrets.RegistryPassword }}' `
#            -ImageOrg         '${{ github.repository_owner }}'
